'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CopyButton = function (_Component) {
  _inherits(CopyButton, _Component);

  function CopyButton() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, CopyButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CopyButton.__proto__ || Object.getPrototypeOf(CopyButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      showFeedback: false
    }, _this.handleClick = function (evt) {
      _this.setState({ showFeedback: true });
      _this.timeoutId = setTimeout(function () {
        _this.setState({ showFeedback: false });
      }, _this.props.feedbackTimeout);

      _this.props.onClick(evt);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(CopyButton, [{
    key: 'componentWillUnmount',

    /* istanbul ignore next */
    value: function componentWillUnmount() {
      if (typeof this.timeoutId !== 'undefined') {
        clearTimeout(this.timeoutId);
        delete this.timeoutId;
      }
    }
  }, {
    key: 'render',
    // eslint-disable-line no-unused-vars
    value: function render() {
      var _props = this.props,
          iconDescription = _props.iconDescription,
          className = _props.className,
          feedback = _props.feedback,
          feedbackTimeout = _props.feedbackTimeout,
          onClick = _props.onClick,
          other = _objectWithoutProperties(_props, ['iconDescription', 'className', 'feedback', 'feedbackTimeout', 'onClick']);

      var classNames = (0, _classnames2.default)('bx--snippet-button', className);
      var feedbackClassNames = (0, _classnames2.default)('bx--btn--copy__feedback', {
        'bx--btn--copy__feedback--displayed': this.state.showFeedback
      });
      return _react2.default.createElement(
        'button',
        _extends({
          type: 'button',
          className: classNames,
          onClick: this.handleClick
        }, other),
        _react2.default.createElement(_Icon2.default, { className: 'bx--snippet__icon', name: 'copy', description: iconDescription }),
        _react2.default.createElement('div', { className: feedbackClassNames, 'data-feedback': feedback })
      );
    }
  }]);

  return CopyButton;
}(_react.Component);

CopyButton.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  iconDescription: _propTypes2.default.string,
  feedback: _propTypes2.default.string,
  feedbackTimeout: _propTypes2.default.number,
  onClick: _propTypes2.default.func
};
CopyButton.defaultProps = {
  iconDescription: 'Copy to clipboard',
  feedback: 'Copied!',
  feedbackTimeout: 2000,
  onClick: function onClick() {}
};
exports.default = CopyButton;