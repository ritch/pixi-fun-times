'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  checked: _propTypes2.default.bool,
  defaultChecked: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  id: _propTypes2.default.string.isRequired,
  labelText: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  iconDescription: _propTypes2.default.string
};

var defaultProps = {
  onChange: function onChange() {},
  labelText: 'Provide checkbox label text',
  iconDescription: 'Provide icon description for a11y'
};

var Checkbox = function Checkbox(_ref) {
  var className = _ref.className,
      id = _ref.id,
      labelText = _ref.labelText,
      _onChange = _ref.onChange,
      iconDescription = _ref.iconDescription,
      other = _objectWithoutProperties(_ref, ['className', 'id', 'labelText', 'onChange', 'iconDescription']);

  var input = void 0;
  var wrapperClasses = (0, _classnames2.default)('bx--checkbox-label', className);

  return _react2.default.createElement(
    'div',
    { className: 'bx--form-item bx--checkbox-wrapper' },
    _react2.default.createElement(
      'label',
      { htmlFor: id, className: wrapperClasses },
      _react2.default.createElement('input', _extends({}, other, {
        type: 'checkbox',
        onChange: function onChange(evt) {
          _onChange(input.checked, id, evt);
        },
        className: 'bx--checkbox',
        id: id,
        ref: function ref(el) {
          input = el;
        }
      })),
      _react2.default.createElement(
        'span',
        { className: 'bx--checkbox-appearance' },
        _react2.default.createElement(_Icon2.default, {
          className: 'bx--checkbox-checkmark',
          description: iconDescription,
          name: 'checkmark'
        })
      ),
      _react2.default.createElement(
        'span',
        { className: 'bx--checkbox-label-text' },
        labelText
      )
    )
  );
};

Checkbox.propTypes = propTypes;
Checkbox.defaultProps = defaultProps;

exports.default = Checkbox;