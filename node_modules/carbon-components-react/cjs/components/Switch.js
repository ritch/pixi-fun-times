'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  className: _propTypes2.default.string,
  index: _propTypes2.default.number,
  kind: _propTypes2.default.oneOf(['button', 'anchor']).isRequired,
  name: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  onClick: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  selected: _propTypes2.default.bool,
  text: _propTypes2.default.string.isRequired
};

var defaultProps = {
  selected: false,
  kind: 'anchor',
  text: 'Provide text',
  onClick: function onClick() {},
  onKeyDown: function onKeyDown() {}
};

var Switch = function Switch(props) {
  var className = props.className,
      index = props.index,
      kind = props.kind,
      name = props.name,
      onClick = props.onClick,
      onKeyDown = props.onKeyDown,
      selected = props.selected,
      text = props.text,
      other = _objectWithoutProperties(props, ['className', 'index', 'kind', 'name', 'onClick', 'onKeyDown', 'selected', 'text']);

  var handleClick = function handleClick(e) {
    e.preventDefault();
    onClick({ index: index, name: name, text: text });
  };

  var handleKeyDown = function handleKeyDown(e) {
    var key = e.key || e.which;

    if (key === 'Enter' || key === 13 || key === ' ' || key === 32) {
      onKeyDown({ index: index, name: name, text: text });
    }
  };

  var classes = (0, _classnames2.default)(className, 'bx--content-switcher-btn', {
    'bx--content-switcher--selected': selected
  });

  var commonProps = {
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    className: classes
  };

  if (kind === 'button') {
    return _react2.default.createElement(
      'button',
      _extends({}, other, commonProps),
      text
    );
  }

  return _react2.default.createElement(
    'a',
    _extends({ href: '#' }, other, commonProps),
    text
  );
};

Switch.defaultProps = defaultProps;
Switch.propTypes = propTypes;

exports.default = Switch;