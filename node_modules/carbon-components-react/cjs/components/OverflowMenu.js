'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ClickListener = require('../internal/ClickListener');

var _ClickListener2 = _interopRequireDefault(_ClickListener);

var _FloatingMenu = require('../internal/FloatingMenu');

var _FloatingMenu2 = _interopRequireDefault(_FloatingMenu);

var _OptimizedResize = require('../internal/OptimizedResize');

var _OptimizedResize2 = _interopRequireDefault(_OptimizedResize);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverflowMenu = function (_Component) {
  _inherits(OverflowMenu, _Component);

  function OverflowMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, OverflowMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = OverflowMenu.__proto__ || Object.getPrototypeOf(OverflowMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: _this.props.open
    }, _this.getMenuPosition = function () {
      if (_this.menuEl) {
        var menuPosition = _this.menuEl.getBoundingClientRect();
        _this.setState({ menuPosition: menuPosition });
      }
    }, _this.handleClick = function (evt) {
      _this.setState({ open: !_this.state.open });
      _this.props.onClick(evt);
    }, _this.handleKeyPress = function (evt) {
      var key = evt.key || evt.which;

      if (key === 'Enter' || key === 13 || key === ' ' || key === 32) {
        _this.setState({ open: !_this.state.open });
      }
    }, _this.handleClickOutside = function () {
      _this.closeMenu();
    }, _this.closeMenu = function () {
      _this.setState({ open: false });
    }, _this.bindMenuEl = function (menuEl) {
      _this.menuEl = menuEl;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(OverflowMenu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      requestAnimationFrame(function () {
        _this2.getMenuPosition();
      });
      this.hResize = _OptimizedResize2.default.add(function () {
        _this2.getMenuPosition();
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.open !== this.props.open) {
        this.setState({ open: nextProps.open });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.hResize.release();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          id = _props.id,
          tabIndex = _props.tabIndex,
          ariaLabel = _props.ariaLabel,
          children = _props.children,
          iconDescription = _props.iconDescription,
          iconName = _props.iconName,
          flipped = _props.flipped,
          floatingMenu = _props.floatingMenu,
          menuOffset = _props.menuOffset,
          menuOffsetFlip = _props.menuOffsetFlip,
          iconClass = _props.iconClass,
          onClick = _props.onClick,
          other = _objectWithoutProperties(_props, ['id', 'tabIndex', 'ariaLabel', 'children', 'iconDescription', 'iconName', 'flipped', 'floatingMenu', 'menuOffset', 'menuOffsetFlip', 'iconClass', 'onClick']);

      var overflowMenuClasses = (0, _classnames2.default)(this.props.className, 'bx--overflow-menu', {
        'bx--overflow-menu--open': this.state.open
      });

      var overflowMenuOptionsClasses = (0, _classnames2.default)('bx--overflow-menu-options', {
        'bx--overflow-menu--flip': this.props.flipped,
        'bx--overflow-menu-options--open': this.state.open
      });

      var overflowMenuIconClasses = (0, _classnames2.default)('bx--overflow-menu__icon', iconClass);

      var childrenWithProps = _react2.default.Children.toArray(children).map(function (child) {
        return _react2.default.cloneElement(child, {
          closeMenu: _this3.closeMenu
        });
      });

      return _react2.default.createElement(
        _ClickListener2.default,
        { onClickOutside: this.handleClickOutside },
        _react2.default.createElement(
          'div',
          _extends({}, other, {
            className: overflowMenuClasses,
            onKeyDown: this.handleKeyPress,
            'aria-label': ariaLabel,
            id: id,
            tabIndex: tabIndex,
            ref: this.bindMenuEl
          }),
          _react2.default.createElement(_Icon2.default, {
            onClick: this.handleClick,
            className: overflowMenuIconClasses,
            name: iconName,
            description: iconDescription,
            style: { width: '100%' }
          }),
          floatingMenu ? _react2.default.createElement(
            _FloatingMenu2.default,
            {
              menuPosition: this.state.menuPosition,
              menuDirection: 'bottom',
              menuOffset: flipped ? menuOffsetFlip : menuOffset
            },
            _react2.default.createElement(
              'ul',
              { className: overflowMenuOptionsClasses },
              childrenWithProps
            )
          ) : _react2.default.createElement(
            'ul',
            { className: overflowMenuOptionsClasses },
            childrenWithProps
          )
        )
      );
    }
  }]);

  return OverflowMenu;
}(_react.Component);

OverflowMenu.propTypes = {
  open: _propTypes2.default.bool,
  flipped: _propTypes2.default.bool,
  floatingMenu: _propTypes2.default.bool,
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  tabIndex: _propTypes2.default.number,
  id: _propTypes2.default.string,
  ariaLabel: _propTypes2.default.string,
  onClick: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  handleClick: _propTypes2.default.func,
  iconDescription: _propTypes2.default.string.isRequired,
  iconName: _propTypes2.default.string,
  menuOffset: _propTypes2.default.object,
  menuOffsetFlip: _propTypes2.default.object,
  iconClass: _propTypes2.default.string
};
OverflowMenu.defaultProps = {
  ariaLabel: 'list of options',
  iconDescription: 'open and close list of options',
  iconName: 'overflow-menu',
  open: false,
  flipped: false,
  floatingMenu: false,
  onClick: function onClick() {},
  tabIndex: 0,
  menuOffset: { top: 0, left: 60.5 },
  menuOffsetFlip: { top: 0, left: -60.5 }
};
exports.default = OverflowMenu;