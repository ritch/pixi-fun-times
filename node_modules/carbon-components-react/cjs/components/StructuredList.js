'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StructuredListCell = exports.StructuredListInput = exports.StructuredListRow = exports.StructuredListBody = exports.StructuredListHead = exports.StructuredListWrapper = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _uniqueId = require('../lib/uniqueId');

var _uniqueId2 = _interopRequireDefault(_uniqueId);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StructuredListWrapper = function (_Component) {
  _inherits(StructuredListWrapper, _Component);

  function StructuredListWrapper() {
    _classCallCheck(this, StructuredListWrapper);

    return _possibleConstructorReturn(this, (StructuredListWrapper.__proto__ || Object.getPrototypeOf(StructuredListWrapper)).apply(this, arguments));
  }

  _createClass(StructuredListWrapper, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          selection = _props.selection,
          className = _props.className,
          border = _props.border,
          other = _objectWithoutProperties(_props, ['children', 'selection', 'className', 'border']);

      var classes = (0, _classnames2.default)('bx--structured-list', className, {
        'bx--structured-list--border': border,
        'bx--structured-list--selection': selection
      });

      return _react2.default.createElement(
        'section',
        _extends({ className: classes }, other),
        children
      );
    }
  }]);

  return StructuredListWrapper;
}(_react.Component);

StructuredListWrapper.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  border: _propTypes2.default.bool,
  selection: _propTypes2.default.bool
};
StructuredListWrapper.defaultProps = {
  border: false,
  selection: false
};

var StructuredListHead = function (_Component2) {
  _inherits(StructuredListHead, _Component2);

  function StructuredListHead() {
    _classCallCheck(this, StructuredListHead);

    return _possibleConstructorReturn(this, (StructuredListHead.__proto__ || Object.getPrototypeOf(StructuredListHead)).apply(this, arguments));
  }

  _createClass(StructuredListHead, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          other = _objectWithoutProperties(_props2, ['children', 'className']);

      var classes = (0, _classnames2.default)('bx--structured-list-thead', className);
      return _react2.default.createElement(
        'div',
        _extends({ className: classes }, other),
        children
      );
    }
  }]);

  return StructuredListHead;
}(_react.Component);

StructuredListHead.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string
};

var StructuredListInput = function (_Component3) {
  _inherits(StructuredListInput, _Component3);

  function StructuredListInput() {
    _classCallCheck(this, StructuredListInput);

    return _possibleConstructorReturn(this, (StructuredListInput.__proto__ || Object.getPrototypeOf(StructuredListInput)).apply(this, arguments));
  }

  _createClass(StructuredListInput, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.uid = this.props.id || (0, _uniqueId2.default)();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          className = _props3.className,
          value = _props3.value,
          name = _props3.name,
          title = _props3.title,
          other = _objectWithoutProperties(_props3, ['className', 'value', 'name', 'title']);

      var classes = (0, _classnames2.default)('bx--structured-list-input', className);
      return _react2.default.createElement('input', _extends({}, other, {
        type: 'radio',
        tabIndex: -1,
        id: this.uid,
        className: classes,
        value: value,
        name: name,
        title: title
      }));
    }
  }]);

  return StructuredListInput;
}(_react.Component);

StructuredListInput.propTypes = {
  className: _propTypes2.default.string,
  id: _propTypes2.default.string,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
  name: _propTypes2.default.string,
  title: _propTypes2.default.string,
  defaultChecked: _propTypes2.default.bool,
  onChange: _propTypes2.default.func
};
StructuredListInput.defaultProps = {
  onChange: function onChange() {},
  value: 'value',
  title: 'title'
};

var StructuredListRow = function (_Component4) {
  _inherits(StructuredListRow, _Component4);

  function StructuredListRow() {
    _classCallCheck(this, StructuredListRow);

    return _possibleConstructorReturn(this, (StructuredListRow.__proto__ || Object.getPrototypeOf(StructuredListRow)).apply(this, arguments));
  }

  _createClass(StructuredListRow, [{
    key: 'render',
    value: function render() {
      var _props4 = this.props,
          onKeyDown = _props4.onKeyDown,
          tabIndex = _props4.tabIndex,
          htmlFor = _props4.htmlFor,
          children = _props4.children,
          className = _props4.className,
          head = _props4.head,
          label = _props4.label,
          other = _objectWithoutProperties(_props4, ['onKeyDown', 'tabIndex', 'htmlFor', 'children', 'className', 'head', 'label']);

      var classes = (0, _classnames2.default)('bx--structured-list-row', className, {
        'bx--structured-list-row--header-row': head
      });

      return label ? _react2.default.createElement(
        'label',
        _extends({}, other, {
          tabIndex: tabIndex,
          className: classes,
          htmlFor: htmlFor,
          onKeyDown: onKeyDown
        }),
        children
      ) : _react2.default.createElement(
        'div',
        _extends({}, other, { className: classes }),
        children
      );
    }
  }]);

  return StructuredListRow;
}(_react.Component);

StructuredListRow.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  head: _propTypes2.default.bool,
  label: _propTypes2.default.bool,
  htmlFor: _propTypes2.default.string,
  tabIndex: _propTypes2.default.number,
  onKeyDown: _propTypes2.default.func
};
StructuredListRow.defaultProps = {
  htmlFor: 'unique id',
  head: false,
  label: false,
  tabIndex: 0,
  onKeyDown: function onKeyDown() {}
};

var StructuredListBody = function (_Component5) {
  _inherits(StructuredListBody, _Component5);

  function StructuredListBody() {
    var _ref;

    var _temp, _this5, _ret;

    _classCallCheck(this, StructuredListBody);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this5 = _possibleConstructorReturn(this, (_ref = StructuredListBody.__proto__ || Object.getPrototypeOf(StructuredListBody)).call.apply(_ref, [this].concat(args))), _this5), _this5.state = {
      labelRows: null,
      rowSelected: 0
    }, _temp), _possibleConstructorReturn(_this5, _ret);
  }

  _createClass(StructuredListBody, [{
    key: 'render',
    value: function render() {
      var _props5 = this.props,
          children = _props5.children,
          className = _props5.className,
          other = _objectWithoutProperties(_props5, ['children', 'className']);

      var classes = (0, _classnames2.default)('bx--structured-list-tbody', className);
      return _react2.default.createElement(
        'div',
        _extends({ className: classes }, other),
        children
      );
    }
  }]);

  return StructuredListBody;
}(_react.Component);

StructuredListBody.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  head: _propTypes2.default.bool,
  onKeyDown: _propTypes2.default.func
};
StructuredListBody.defaultProps = {
  onKeyDown: function onKeyDown() {}
};

var StructuredListCell = function (_Component6) {
  _inherits(StructuredListCell, _Component6);

  function StructuredListCell() {
    _classCallCheck(this, StructuredListCell);

    return _possibleConstructorReturn(this, (StructuredListCell.__proto__ || Object.getPrototypeOf(StructuredListCell)).apply(this, arguments));
  }

  _createClass(StructuredListCell, [{
    key: 'render',
    value: function render() {
      var _props6 = this.props,
          children = _props6.children,
          className = _props6.className,
          head = _props6.head,
          noWrap = _props6.noWrap,
          other = _objectWithoutProperties(_props6, ['children', 'className', 'head', 'noWrap']);

      var classes = (0, _classnames2.default)(className, {
        'bx--structured-list-th': head,
        'bx--structured-list-td': !head,
        'bx--structured-list-content--nowrap': noWrap
      });

      return _react2.default.createElement(
        'div',
        _extends({ className: classes }, other),
        children
      );
    }
  }]);

  return StructuredListCell;
}(_react.Component);

StructuredListCell.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  head: _propTypes2.default.bool,
  noWrap: _propTypes2.default.bool
};
StructuredListCell.defaultProps = {
  head: false,
  noWrap: false
};
exports.StructuredListWrapper = StructuredListWrapper;
exports.StructuredListHead = StructuredListHead;
exports.StructuredListBody = StructuredListBody;
exports.StructuredListRow = StructuredListRow;
exports.StructuredListInput = StructuredListInput;
exports.StructuredListCell = StructuredListCell;