'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tab = function (_React$Component) {
  _inherits(Tab, _React$Component);

  function Tab() {
    _classCallCheck(this, Tab);

    return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
  }

  _createClass(Tab, [{
    key: 'setTabFocus',
    value: function setTabFocus(evt) {
      var leftKey = 37;
      var rightKey = 39;
      if (evt.which === leftKey) {
        this.props.handleTabAnchorFocus(this.props.index - 1);
      } else if (evt.which === rightKey) {
        this.props.handleTabAnchorFocus(this.props.index + 1);
      } else {
        return;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          handleTabClick = _props.handleTabClick,
          handleTabAnchorFocus = _props.handleTabAnchorFocus,
          handleTabKeyDown = _props.handleTabKeyDown,
          href = _props.href,
          index = _props.index,
          label = _props.label,
          role = _props.role,
          selected = _props.selected,
          tabIndex = _props.tabIndex,
          _onClick = _props.onClick,
          _onKeyDown = _props.onKeyDown,
          other = _objectWithoutProperties(_props, ['className', 'handleTabClick', 'handleTabAnchorFocus', 'handleTabKeyDown', 'href', 'index', 'label', 'role', 'selected', 'tabIndex', 'onClick', 'onKeyDown']);

      var classes = (0, _classnames2.default)('bx--tabs__nav-item', { 'bx--tabs__nav-item--selected': selected }, className);

      return _react2.default.createElement(
        'li',
        _extends({}, other, {
          className: classes,
          onClick: function onClick(evt) {
            handleTabClick(index, label, evt);
            _onClick(evt);
          },
          onKeyDown: function onKeyDown(evt) {
            _this2.setTabFocus(evt);
            handleTabKeyDown(index, label, evt);
            _onKeyDown(evt);
          },
          role: role,
          selected: selected
        }),
        _react2.default.createElement(
          'a',
          {
            className: 'bx--tabs__nav-link',
            href: href,
            role: 'tab',
            tabIndex: tabIndex,
            ref: 'tabAnchor'
          },
          label
        )
      );
    }
  }]);

  return Tab;
}(_react2.default.Component);

Tab.propTypes = {
  className: _propTypes2.default.string,
  handleTabClick: _propTypes2.default.func,
  handleTabAnchorFocus: _propTypes2.default.func,
  handleTabKeyDown: _propTypes2.default.func,
  href: _propTypes2.default.string.isRequired,
  index: _propTypes2.default.number,
  label: _propTypes2.default.string.isRequired,
  role: _propTypes2.default.string.isRequired,
  onClick: _propTypes2.default.func.isRequired,
  onKeyDown: _propTypes2.default.func.isRequired,
  selected: _propTypes2.default.bool.isRequired,
  tabIndex: _propTypes2.default.number.isRequired
};
Tab.defaultProps = {
  role: 'presentation',
  label: 'provide a label',
  tabIndex: 0,
  href: '#',
  selected: false,
  onClick: function onClick() {},
  onKeyDown: function onKeyDown() {}
};
exports.default = Tab;