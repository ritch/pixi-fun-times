'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  id: _propTypes2.default.string.isRequired,
  inline: _propTypes2.default.bool,
  labelText: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  disabled: _propTypes2.default.bool,
  defaultValue: _propTypes2.default.any,
  iconDescription: _propTypes2.default.string,
  hideLabel: _propTypes2.default.bool
};

var defaultProps = {
  disabled: false,
  labelText: 'Select',
  inline: false,
  iconDescription: 'open list of options'
};

var Select = function Select(_ref) {
  var className = _ref.className,
      id = _ref.id,
      inline = _ref.inline,
      labelText = _ref.labelText,
      disabled = _ref.disabled,
      children = _ref.children,
      iconDescription = _ref.iconDescription,
      hideLabel = _ref.hideLabel,
      other = _objectWithoutProperties(_ref, ['className', 'id', 'inline', 'labelText', 'disabled', 'children', 'iconDescription', 'hideLabel']);

  var selectClasses = (0, _classnames2.default)(_defineProperty({
    'bx--select': true,
    'bx--select--inline': inline
  }, className, className));
  var labelClasses = (0, _classnames2.default)('bx--label', {
    'bx--visually-hidden': hideLabel
  });
  return _react2.default.createElement(
    'div',
    { className: 'bx--form-item' },
    !inline ? _react2.default.createElement(
      'label',
      { htmlFor: id, className: labelClasses },
      labelText
    ) : null,
    _react2.default.createElement(
      'div',
      { className: selectClasses },
      inline ? _react2.default.createElement(
        'label',
        { htmlFor: id, className: labelClasses },
        labelText
      ) : null,
      _react2.default.createElement(
        'select',
        _extends({}, other, { id: id, className: 'bx--select-input', disabled: disabled }),
        children
      ),
      _react2.default.createElement(_Icon2.default, { name: 'caret--down', className: 'bx--select__arrow', description: iconDescription })
    )
  );
};

Select.propTypes = propTypes;
Select.defaultProps = defaultProps;

exports.default = Select;