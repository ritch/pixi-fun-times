'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _flatpickr = require('flatpickr');

var _flatpickr2 = _interopRequireDefault(_flatpickr);

var _DatePickerInput = require('./DatePickerInput');

var _DatePickerInput2 = _interopRequireDefault(_DatePickerInput);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Weekdays shorthand for english locale
_flatpickr2.default.l10ns.en.weekdays.shorthand.forEach(function (day, index) {
  var currentDay = _flatpickr2.default.l10ns.en.weekdays.shorthand;
  if (currentDay[index] === 'Thu' || currentDay[index] === 'Th') {
    currentDay[index] = 'Th';
  } else {
    currentDay[index] = currentDay[index].charAt(0);
  }
});

var DatePicker = function (_Component) {
  _inherits(DatePicker, _Component);

  function DatePicker() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DatePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      cal: {}
    }, _this.addKeyboardEvents = function (cal) {
      var input = _this.inputField;
      input.addEventListener('keydown', function (e) {
        if (e.which === 40) {
          cal.calendarContainer.focus();
        }
      });
      cal.calendarContainer.addEventListener('keydown', function (e) {
        if (e.which === 9 && _this.props.datePickerType === 'range') {
          _this._updateClassNames(cal);
          input.focus();
        }
      });
    }, _this.initDatePickerCalendar = function () {
      var input = _this.inputField;
      var calendar = new _flatpickr2.default(input, {
        mode: _this.props.datePickerType,
        allowInput: true,
        dateFormat: _this.props.dateFormat,
        onClose: function onClose(selectedDates) {
          _this.updateClassNames(calendar);
          _this.updateInputFields(selectedDates);
          if (_this.props.datePickerType === 'range') {
            var toInputField = _this.toInputField;
            if (calendar.selectedDates.length === 1) {
              input.focus();
            } else {
              toInputField.focus();
            }
            toInputField.classList.remove('bx--focused');
          }
        },
        onChange: function onChange() {
          _this.updateClassNames(calendar);
          if (_this.props.datePickerType === 'range') {
            var toInputField = _this.toInputField;
            if (calendar.selectedDates.length === 1 && calendar.isOpen) {
              toInputField.classList.add('bx--focused');
            } else {
              toInputField.classList.remove('bx--focused');
            }
          }
        },
        onMonthChange: function onMonthChange() {
          _this.updateClassNames(calendar);
        },
        onYearChange: function onYearChange() {
          _this.updateClassNames(calendar);
        },
        onOpen: function onOpen() {
          _this.updateClassNames(calendar);
        },
        nextArrow: _this.rightArrowHTML(),
        prevArrow: _this.leftArrowHTML()
      });
      if (_this.props.datePickerType === 'range') {
        var toInputField = _this.toInputField;
        toInputField.addEventListener('click', function () {
          toInputField.focus();
          calendar.open();
          _this.updateClassNames(calendar);
        });
        _this.addInputLogic(toInputField);
      }
      _this.setState({
        cal: calendar
      });
      _this.addKeyboardEvents(calendar);
      _this.updateClassNames(calendar);
      _this.addInputLogic(input);
    }, _this.addInputLogic = function (input) {
      var inputField = input;
      inputField.addEventListener('change', function () {
        var inputDate = _this.state.cal.parseDate(new Date(inputField.value));
        if (!isNaN(inputDate.valueOf())) {
          _this.state.cal.setDate(inputDate);
        }
        _this.updateClassNames(_this.state.cal);
      });
    }, _this.openCalendar = function () {
      _this.state.cal.open();
    }, _this.updateClassNames = function (calendar) {
      var calendarContainer = calendar.calendarContainer;
      calendarContainer.classList.add('bx--date-picker__calendar');
      calendarContainer.querySelector('.flatpickr-month').classList.add('bx--date-picker__month');
      calendarContainer.querySelector('.flatpickr-weekdays').classList.add('bx--date-picker__weekdays');
      calendarContainer.querySelector('.flatpickr-days').classList.add('bx--date-picker__days');
      [].concat(_toConsumableArray(calendarContainer.querySelectorAll('.flatpickr-weekday'))).forEach(function (item) {
        var currentItem = item;
        currentItem.innerHTML = currentItem.innerHTML.replace(/\s+/g, '');
        currentItem.classList.add('bx--date-picker__weekday');
      });
      [].concat(_toConsumableArray(calendarContainer.querySelectorAll('.flatpickr-day'))).forEach(function (item) {
        item.classList.add('bx--date-picker__day');
        if (item.classList.contains('today') && calendar.selectedDates.length > 0) {
          item.classList.add('no-border');
        } else if (item.classList.contains('today') && calendar.selectedDates.length === 0) {
          item.classList.remove('no-border');
        }
      });
    }, _this.updateInputFields = function (selectedDates) {
      var input = _this.inputField;
      if (_this.props.datePickerType === 'range') {
        var toInput = _this.toInputField;
        if (selectedDates.length === 2) {
          input.value = _this.formatDate(selectedDates[0]);
          toInput.value = _this.formatDate(selectedDates[1]);
        } else if (selectedDates.length === 1) {
          input.value = _this.formatDate(selectedDates[0]);
        }
      } else if (selectedDates.length === 1) {
        input.value = _this.formatDate(selectedDates[0]);
      }
      _this.updateClassNames(_this.state.cal);
    }, _this.formatDate = function (date) {
      return _this.state.cal.formatDate(date, _this.props.dateFormat);
    }, _this.assignInputFieldRef = function (node) {
      _this.inputField = !node ? null :
      // Child is a regular DOM node, seen in tests
      node.nodeType === Node.ELEMENT_NODE ? node.querySelector('.bx--date-picker__input') :
      // Child is a React component
      node.input && node.input.nodeType === Node.ELEMENT_NODE ? node.input : null;
    }, _this.assignToInputFieldRef = function (node) {
      _this.toInputField = !node ? null :
      // Child is a regular DOM node, seen in tests
      node.nodeType === Node.ELEMENT_NODE ? node.querySelector('.bx--date-picker__input') :
      // Child is a React component
      node.input && node.input.nodeType === Node.ELEMENT_NODE ? node.input : null;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DatePicker, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.datePickerType === 'single' || this.props.datePickerType === 'range') {
        this.initDatePickerCalendar();
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.props.datePickerType === 'range' || this.props.datePickerType === 'single') {
        this.state.cal.destroy();
      }
    }
  }, {
    key: 'rightArrowHTML',
    value: function rightArrowHTML() {
      return '\n      <svg width="8" height="12" viewBox="0 0 8 12" fill-rule="evenodd">\n        <path d="M0 10.6L4.7 6 0 1.4 1.4 0l6.1 6-6.1 6z"></path>\n      </svg>';
    }
  }, {
    key: 'leftArrowHTML',
    value: function leftArrowHTML() {
      return '\n      <svg width="8" height="12" viewBox="0 0 8 12" fill-rule="evenodd">\n        <path d="M7.5 10.6L2.8 6l4.7-4.6L6.1 0 0 6l6.1 6z"></path>\n      </svg>';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          short = _props.short,
          datePickerType = _props.datePickerType,
          dateFormat = _props.dateFormat,
          other = _objectWithoutProperties(_props, ['children', 'className', 'short', 'datePickerType', 'dateFormat']);

      var datePickerClasses = (0, _classnames2.default)('bx--date-picker', className, {
        'bx--date-picker--short': short,
        'bx--date-picker--simple': datePickerType === 'simple',
        'bx--date-picker--single': datePickerType === 'single',
        'bx--date-picker--range': datePickerType === 'range'
      });

      var datePickerIcon = datePickerType === 'range' ? _react2.default.createElement(
        'svg',
        {
          onClick: this.openCalendar,
          className: 'bx--date-picker__icon',
          width: '17',
          height: '19',
          viewBox: '0 0 17 19'
        },
        _react2.default.createElement('path', { d: 'M12 0h2v2.7h-2zM3 0h2v2.7H3z' }),
        _react2.default.createElement('path', { d: 'M0 2v17h17V2H0zm15 15H2V7h13v10z' }),
        _react2.default.createElement('path', { d: 'M9.9 15H8.6v-3.9H7.1v-.9c.9 0 1.7-.3 1.8-1.2h1v6z' })
      ) : '';

      var childArray = _react2.default.Children.toArray(children);
      var childrenWithProps = childArray.map(function (child, index) {
        if (index === 0 && child.type === _DatePickerInput2.default) {
          return _react2.default.cloneElement(child, {
            datePickerType: datePickerType,
            ref: _this2.assignInputFieldRef
          });
        } else if (index === 1 && child.type === _DatePickerInput2.default) {
          return _react2.default.cloneElement(child, {
            datePickerType: datePickerType,
            ref: _this2.assignToInputFieldRef
          });
        } else if (index === 0) {
          return _react2.default.cloneElement(child, {
            ref: _this2.assignInputFieldRef
          });
        } else if (index === 1) {
          return _react2.default.cloneElement(child, {
            ref: _this2.assignToInputFieldRef
          });
        }
      });

      return _react2.default.createElement(
        'div',
        { className: 'bx--form-item' },
        _react2.default.createElement(
          'div',
          _extends({ className: datePickerClasses }, other),
          childrenWithProps,
          datePickerIcon
        )
      );
    }
  }]);

  return DatePicker;
}(_react.Component);

DatePicker.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  short: _propTypes2.default.bool,
  datePickerType: _propTypes2.default.string,
  dateFormat: _propTypes2.default.string
};
DatePicker.defaultProps = {
  short: false,
  dateFormat: 'm/d/Y'
};
exports.default = DatePicker;