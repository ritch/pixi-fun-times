'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  children: _propTypes2.default.node,
  legendText: _propTypes2.default.string,
  className: _propTypes2.default.string,
  invalid: _propTypes2.default.bool,
  message: _propTypes2.default.bool,
  messageText: _propTypes2.default.string
};
var defaultProps = {
  invalid: false,
  message: false,
  messageText: 'Provide message text',
  legendText: 'Provide legend text'
};

var FormGroup = function FormGroup(_ref) {
  var legendText = _ref.legendText,
      invalid = _ref.invalid,
      children = _ref.children,
      className = _ref.className,
      message = _ref.message,
      messageText = _ref.messageText,
      other = _objectWithoutProperties(_ref, ['legendText', 'invalid', 'children', 'className', 'message', 'messageText']);

  var classNamesLegend = (0, _classnames2.default)('bx--label', className);
  var classNamesFieldset = (0, _classnames2.default)('bx--fieldset', className);

  return _react2.default.createElement(
    'fieldset',
    _extends({}, invalid && { 'data-invalid': '' }, {
      className: classNamesFieldset
    }, other),
    _react2.default.createElement(
      'legend',
      { className: classNamesLegend },
      legendText
    ),
    children,
    message ? _react2.default.createElement(
      'div',
      { className: 'bx--form__requirements' },
      messageText
    ) : null
  );
};

FormGroup.propTypes = propTypes;
FormGroup.defaultProps = defaultProps;

exports.default = FormGroup;