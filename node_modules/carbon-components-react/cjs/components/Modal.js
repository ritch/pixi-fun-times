'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Modal = function (_Component) {
  _inherits(Modal, _Component);

  function Modal() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.handleKeyDown = function (evt) {
      if (evt.which === 27) {
        _this.props.onRequestClose();
      }
    }, _this.handleClick = function (evt) {
      var innerModal = _this.refs.modalInner;
      var isTarget = innerModal.contains(evt.target);
      if (!isTarget) {
        _this.props.onRequestClose();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Modal, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          modalHeading = _props.modalHeading,
          modalLabel = _props.modalLabel,
          passiveModal = _props.passiveModal,
          secondaryButtonText = _props.secondaryButtonText,
          primaryButtonText = _props.primaryButtonText,
          open = _props.open,
          onRequestClose = _props.onRequestClose,
          onRequestSubmit = _props.onRequestSubmit,
          onSecondarySubmit = _props.onSecondarySubmit,
          iconDescription = _props.iconDescription,
          primaryButtonDisabled = _props.primaryButtonDisabled,
          other = _objectWithoutProperties(_props, ['modalHeading', 'modalLabel', 'passiveModal', 'secondaryButtonText', 'primaryButtonText', 'open', 'onRequestClose', 'onRequestSubmit', 'onSecondarySubmit', 'iconDescription', 'primaryButtonDisabled']);

      var onSecondaryButtonClick = onSecondarySubmit ? onSecondarySubmit : onRequestClose;

      var modalClasses = (0, _classnames2.default)(_defineProperty({
        'bx--modal': true,
        'bx--modal-tall': !passiveModal,
        'is-visible': open
      }, this.props.className, this.props.className));

      var modalLabelContent = modalLabel ? _react2.default.createElement(
        'h4',
        { className: 'bx--modal-header__label' },
        modalLabel
      ) : '';

      var modalBody = passiveModal ? _react2.default.createElement(
        'div',
        { ref: 'modalInner', className: 'bx--modal-container' },
        _react2.default.createElement(
          'div',
          { className: 'bx--modal-header' },
          _react2.default.createElement(
            'button',
            { className: 'bx--modal-close', type: 'button', onClick: onRequestClose },
            _react2.default.createElement(_Icon2.default, {
              name: 'close',
              className: 'bx--modal-close__icon',
              description: iconDescription
            })
          ),
          modalLabelContent,
          _react2.default.createElement(
            'h2',
            { className: 'bx--modal-header__heading' },
            modalHeading
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'bx--modal-content' },
          this.props.children
        )
      ) : _react2.default.createElement(
        'div',
        { ref: 'modalInner', className: 'bx--modal-container' },
        _react2.default.createElement(
          'div',
          { className: 'bx--modal-header' },
          modalLabelContent,
          _react2.default.createElement(
            'h2',
            { className: 'bx--modal-header__heading' },
            modalHeading
          ),
          _react2.default.createElement(
            'button',
            { className: 'bx--modal-close', type: 'button', onClick: onRequestClose },
            _react2.default.createElement(_Icon2.default, {
              name: 'close',
              className: 'bx--modal-close__icon',
              description: iconDescription
            })
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'bx--modal-content' },
          this.props.children
        ),
        _react2.default.createElement(
          'div',
          { className: 'bx--modal-footer' },
          _react2.default.createElement(
            'div',
            { className: 'bx--modal__buttons-container' },
            _react2.default.createElement(
              _Button2.default,
              { kind: 'secondary', onClick: onSecondaryButtonClick },
              secondaryButtonText
            ),
            _react2.default.createElement(
              _Button2.default,
              {
                kind: 'primary',
                disabled: primaryButtonDisabled,
                onClick: onRequestSubmit
              },
              primaryButtonText
            )
          )
        )
      );

      var modal = _react2.default.createElement(
        'div',
        _extends({}, other, {
          onKeyDown: this.handleKeyDown,
          onClick: this.handleClick,
          className: modalClasses,
          tabIndex: -1
        }),
        modalBody
      );

      return modal;
    }
  }]);

  return Modal;
}(_react.Component);

Modal.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  passiveModal: _propTypes2.default.bool,
  onRequestClose: _propTypes2.default.func,
  id: _propTypes2.default.string,
  modalHeading: _propTypes2.default.string,
  modalLabel: _propTypes2.default.string,
  secondaryButtonText: _propTypes2.default.string,
  primaryButtonText: _propTypes2.default.string,
  open: _propTypes2.default.bool,
  onRequestSubmit: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  iconDescription: _propTypes2.default.string,
  primaryButtonDisabled: _propTypes2.default.bool,
  onSecondarySubmit: _propTypes2.default.func
};
Modal.defaultProps = {
  onRequestClose: function onRequestClose() {},
  onRequestSubmit: function onRequestSubmit() {},
  primaryButtonDisabled: false,
  onKeyDown: function onKeyDown() {},
  passiveModal: false,
  iconDescription: 'close the modal',
  modalHeading: 'Provide a heading',
  modalLabel: 'Provide a label'
};
exports.default = Modal;