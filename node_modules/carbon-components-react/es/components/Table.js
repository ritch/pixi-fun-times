var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import PropTypes from 'prop-types';
import React from 'react';
import classNames from 'classnames';

var propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  containerClassName: PropTypes.string
};

var Table = function Table(props) {
  var children = props.children,
      className = props.className,
      containerClassName = props.containerClassName,
      other = _objectWithoutProperties(props, ['children', 'className', 'containerClassName']);

  var tableClasses = classNames(className, 'bx--responsive-table');

  var tableContainerClasses = classNames(containerClassName, 'bx--responsive-table-container');

  return React.createElement(
    'div',
    { className: tableContainerClasses },
    React.createElement(
      'table',
      _extends({}, other, {
        className: tableClasses,
        style: {
          borderCollapse: 'collapse',
          borderSpacing: 0
        }
      }),
      children
    )
  );
};

Table.propTypes = propTypes;

export default Table;