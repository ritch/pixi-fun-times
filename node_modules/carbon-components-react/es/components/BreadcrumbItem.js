var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import PropTypes from 'prop-types';
import React from 'react';
import classnames from 'classnames';
import Link from './Link';

var propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  href: PropTypes.string
};

var BreadcrumbItem = function BreadcrumbItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      href = _ref.href,
      other = _objectWithoutProperties(_ref, ['children', 'className', 'href']);

  var classNames = classnames('bx--breadcrumb-item', className);
  return React.createElement(
    'div',
    _extends({ className: classNames }, other),
    React.createElement(
      Link,
      { href: href },
      children
    )
  );
};

BreadcrumbItem.propTypes = propTypes;

export default BreadcrumbItem;