var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import PropTypes from 'prop-types';
import React from 'react';
import classNames from 'classnames';

var propTypes = {
  value: PropTypes.string.isRequired,
  itemText: PropTypes.string.isRequired,
  className: PropTypes.string,
  onClick: PropTypes.func
};

var defaultProps = {
  onClick: /* istanbul ignore next */function onClick() {}
};

var DropdownItem = function DropdownItem(_ref) {
  var className = _ref.className,
      value = _ref.value,
      itemText = _ref.itemText,
      onClick = _ref.onClick,
      other = _objectWithoutProperties(_ref, ['className', 'value', 'itemText', 'onClick']);

  var dropdownItemClasses = classNames(_defineProperty({
    'bx--dropdown-item': true
  }, className, className));

  var handleClick = function handleClick() {
    var info = {
      value: value,
      itemText: itemText
    };
    onClick(info);
  };

  return React.createElement(
    'li',
    _extends({}, other, {
      value: value,
      className: dropdownItemClasses,
      onClick: handleClick
    }),
    React.createElement(
      'a',
      {
        href: '#',
        onClick: /* istanbul ignore next */function onClick(evt) {
          return evt.preventDefault();
        },
        className: 'bx--dropdown-link'
      },
      itemText
    )
  );
};

DropdownItem.propTypes = propTypes;
DropdownItem.defaultProps = defaultProps;

export default DropdownItem;