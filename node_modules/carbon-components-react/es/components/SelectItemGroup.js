var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import PropTypes from 'prop-types';
import React from 'react';
import classnames from 'classnames';

var propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  disabled: PropTypes.bool,
  label: PropTypes.string.isRequired
};

var defaultProps = {
  disabled: false,
  label: 'Provide label'
};

var SelectItemGroup = function SelectItemGroup(_ref) {
  var children = _ref.children,
      className = _ref.className,
      disabled = _ref.disabled,
      label = _ref.label,
      other = _objectWithoutProperties(_ref, ['children', 'className', 'disabled', 'label']);

  var classNames = classnames('bx--select-optgroup', className);
  return React.createElement(
    'optgroup',
    _extends({ className: classNames, label: label, disabled: disabled }, other),
    children
  );
};

SelectItemGroup.propTypes = propTypes;
SelectItemGroup.defaultProps = defaultProps;

export default SelectItemGroup;