var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import PropTypes from 'prop-types';
import React from 'react';
import ReactDOM from 'react-dom';
import window from 'window-or-global';

var FloatingMenu = function (_React$Component) {
  _inherits(FloatingMenu, _React$Component);

  function FloatingMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, FloatingMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FloatingMenu.__proto__ || Object.getPrototypeOf(FloatingMenu)).call.apply(_ref, [this].concat(args))), _this), _this.getMenuPosition = function () {
      var _this$menu$firstChild = _this.menu.firstChild.getBoundingClientRect(),
          menuWidth = _this$menu$firstChild.width,
          menuHeight = _this$menu$firstChild.height;

      _this.menuWidth = menuWidth;
      _this.menuHeight = menuHeight;
    }, _this.positionFloatingMenu = function () {
      var menuOffset = _this.props.menuOffset;

      var scroll = window.scrollY || 0;

      var _this$props$menuPosit = _this.props.menuPosition,
          refLeft = _this$props$menuPosit.left,
          refTop = _this$props$menuPosit.top,
          refRight = _this$props$menuPosit.right,
          refBottom = _this$props$menuPosit.bottom;


      var refCenterHorizontal = (refLeft + refRight) / 2;
      var refCenterVertical = (refTop + refBottom) / 2;

      return {
        left: function left() {
          return {
            left: refLeft - _this.menuWidth - menuOffset.left,
            top: refCenterVertical - _this.menuHeight / 2 + scroll + menuOffset.top
          };
        },
        top: function top() {
          return {
            left: refCenterHorizontal - _this.menuWidth / 2 + menuOffset.left,
            top: refTop - _this.menuHeight + scroll - menuOffset.top
          };
        },
        right: function right() {
          return {
            left: refRight + menuOffset.left,
            top: refCenterVertical - _this.menuHeight / 2 + scroll + menuOffset.top
          };
        },
        bottom: function bottom() {
          return {
            left: refCenterHorizontal - _this.menuWidth / 2 + menuOffset.left,
            top: refBottom + scroll + menuOffset.top
          };
        }
      }[_this.props.menuDirection]();
    }, _this.renderLayer = function () {
      var pos = _this.positionFloatingMenu();

      var coreStyles = {
        left: pos.left + 'px',
        top: pos.top + 'px',
        position: 'absolute',
        right: 'auto',
        margin: 0,
        opacity: 1
      };

      var style = _extends(coreStyles, _this.props.styles);
      var childrenWithProps = React.cloneElement(_this.props.children, {
        style: style
      });

      ReactDOM.render(childrenWithProps, _this.menu);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(FloatingMenu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.doc) {
        this.menu = this.doc.createElement('div');
        this.menu.ownerDocument.body.appendChild(this.menu);

        var style = {
          display: 'block',
          opacity: 0
        };
        var childrenWithProps = React.cloneElement(this.props.children, {
          style: style
        });
        ReactDOM.render(childrenWithProps, this.menu);

        this.getMenuPosition();
        this.renderLayer();
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.renderLayer();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      ReactDOM.unmountComponentAtNode(this.menu);
      this.menu.ownerDocument.body.removeChild(this.menu);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement('div', { ref: function ref(node) {
          _this2.doc = node && node.ownerDocument;
        }, hidden: true });
    }
  }]);

  return FloatingMenu;
}(React.Component);

FloatingMenu.propTypes = {
  children: PropTypes.any,
  menuPosition: PropTypes.object.isRequired,
  menuDirection: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,
  menuOffset: PropTypes.object.isRequired,
  styles: PropTypes.object
};
FloatingMenu.defaultProps = {
  menuPosition: { left: 0, top: 0, right: 0, bottom: 0 },
  menuDirection: 'bottom'
};


export default FloatingMenu;